//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragments_with_defer_and_include_directives

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.fragments_with_defer_and_include_directives.adapter.SpreadMultipleWithDeferAndInclude_ResponseAdapter
import com.example.fragments_with_defer_and_include_directives.adapter.SpreadMultipleWithDeferAndInclude_VariablesAdapter
import com.example.fragments_with_defer_and_include_directives.fragment.HeroDetails
import com.example.fragments_with_defer_and_include_directives.selections.SpreadMultipleWithDeferAndIncludeSelections
import kotlin.Boolean
import kotlin.String
import kotlin.Unit

public data class SpreadMultipleWithDeferAndInclude(
  public val cond1: Boolean,
  public val cond2: Boolean,
  public val cond3: Boolean,
  public val cond4: Boolean
) : Query<SpreadMultipleWithDeferAndInclude.Data> {
  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    SpreadMultipleWithDeferAndInclude_VariablesAdapter.toJson(writer, customScalarAdapters, this)
  }

  public override fun adapter(): Adapter<Data> {
    return SpreadMultipleWithDeferAndInclude_ResponseAdapter.Data.obj()
  }

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.example.fragments_with_defer_and_include_directives.type.Query.type
  )
  .selections(selections = SpreadMultipleWithDeferAndIncludeSelections.root)
  .build()

  public data class Data(
    public val hero: Hero?
  ) : Query.Data {
    public data class Hero(
      public val __typename: String,
      /**
       * Synthetic field for 'HeroDetails'
       */
      public val heroDetails: HeroDetails?
    )
  }

  public companion object {
    public const val OPERATION_ID: String =
        "4b14bfd272e7ad5590d7d3a2dbefc515867ce301cb7161594457bfc344128c32"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query SpreadMultipleWithDeferAndInclude($cond1: Boolean!, $cond2: Boolean!, $cond3: Boolean!,
     * $cond4: Boolean!) {
     *   hero {
     *     __typename
     *     ...HeroDetails @include(if: $cond1)
     *     ...HeroDetails @skip(if: $cond2)
     *     ...HeroDetails @defer(label: "first")
     *     ...HeroDetails @defer(label: "second")
     *     ...HeroDetails @defer(label: "third") @include(if: $cond3)
     *     ...HeroDetails @defer(label: "fourth") @skip(if: $cond4)
     *   }
     * }
     *
     * fragment HeroDetails on Droid {
     *   name
     * }
     */
    public const val OPERATION_DOCUMENT: String =
        "query SpreadMultipleWithDeferAndInclude(${'$'}cond1: Boolean!, ${'$'}cond2: Boolean!, ${'$'}cond3: Boolean!, ${'$'}cond4: Boolean!) { hero { __typename ...HeroDetails @include(if: ${'$'}cond1) ...HeroDetails @skip(if: ${'$'}cond2) ...HeroDetails @defer(label: \"first\") ...HeroDetails @defer(label: \"second\") ...HeroDetails @defer(label: \"third\") @include(if: ${'$'}cond3) ...HeroDetails @defer(label: \"fourth\") @skip(if: ${'$'}cond4) } }  fragment HeroDetails on Droid { name }"

    public const val OPERATION_NAME: String = "SpreadMultipleWithDeferAndInclude"
  }
}
